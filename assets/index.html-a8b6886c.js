const e=JSON.parse('{"key":"v-6cc550e2","path":"/Nginx/Core/","title":"nginx内核模块","lang":"zh-CN","frontmatter":{"title":"nginx内核模块","lang":"zh-CN","date":"2023-06-20T10:04:14.000Z","permalink":"/Nginx/Core/","icon":"nginx","category":["nginx"],"tag":["nginx"],"description":"内核模块用于控制 nginx服务器 的基本功能，内核参数的修改需要重新启动nginx才能生效？？？ 用于调试进程，定位问题的配置项 daemon 是否以 守护进程 方式启动nginx 语法： daemon on|off; 默认： daemon on; 守护进程（daemon） 是 脱离终端 并且在 后台运行 的进程。 它脱离终端是为了避免进程执行过程中的信息在任何终端上显示，这样一来，进程也不会被任何终端所产生的信息所打断。 nginx毫无疑问是一个需要以守护进程方式运行的服务，因此，默认 都是以这种方式运行的。 不过 nginx 还是提供了 关闭 守护进程的模式，之所以提供这种模式，是为了 方便跟踪调试nginx，毕竟用 gdbLinux常用的程序调试器 调试进程时最烦琐的就是如何继续跟进fork出的子进程了。","head":[["meta",{"property":"og:url","content":"https://jin-shaohui.gitee.io/Nginx/Core/"}],["meta",{"property":"og:site_name","content":"繁华中自律，落魄中自愈"}],["meta",{"property":"og:title","content":"nginx内核模块"}],["meta",{"property":"og:description","content":"内核模块用于控制 nginx服务器 的基本功能，内核参数的修改需要重新启动nginx才能生效？？？ 用于调试进程，定位问题的配置项 daemon 是否以 守护进程 方式启动nginx 语法： daemon on|off; 默认： daemon on; 守护进程（daemon） 是 脱离终端 并且在 后台运行 的进程。 它脱离终端是为了避免进程执行过程中的信息在任何终端上显示，这样一来，进程也不会被任何终端所产生的信息所打断。 nginx毫无疑问是一个需要以守护进程方式运行的服务，因此，默认 都是以这种方式运行的。 不过 nginx 还是提供了 关闭 守护进程的模式，之所以提供这种模式，是为了 方便跟踪调试nginx，毕竟用 gdbLinux常用的程序调试器 调试进程时最烦琐的就是如何继续跟进fork出的子进程了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-14T09:02:01.000Z"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:published_time","content":"2023-06-20T10:04:14.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-14T09:02:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nginx内核模块\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-20T10:04:14.000Z\\",\\"dateModified\\":\\"2023-08-14T09:02:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"用于调试进程，定位问题的配置项","slug":"用于调试进程-定位问题的配置项","link":"#用于调试进程-定位问题的配置项","children":[{"level":4,"title":"daemon","slug":"daemon","link":"#daemon","children":[]},{"level":4,"title":"master_process","slug":"master-process","link":"#master-process","children":[]},{"level":4,"title":"error_log","slug":"error-log","link":"#error-log","children":[]},{"level":4,"title":"debug_points","slug":"debug-points","link":"#debug-points","children":[]},{"level":4,"title":"debug_connection","slug":"debug-connection","link":"#debug-connection","children":[]},{"level":4,"title":"worker_rlimit_core","slug":"worker-rlimit-core","link":"#worker-rlimit-core","children":[]},{"level":4,"title":"working_directory","slug":"working-directory","link":"#working-directory","children":[]}]},{"level":3,"title":"正常运行的必备配置","slug":"正常运行的必备配置","link":"#正常运行的必备配置","children":[{"level":4,"title":"env","slug":"env","link":"#env","children":[]},{"level":4,"title":"include","slug":"include","link":"#include","children":[]},{"level":4,"title":"pid","slug":"pid","link":"#pid","children":[]},{"level":4,"title":"user","slug":"user","link":"#user","children":[]},{"level":4,"title":"worker_rlimit_nofile","slug":"worker-rlimit-nofile","link":"#worker-rlimit-nofile","children":[]},{"level":4,"title":"worker_rlimit_sigpending","slug":"worker-rlimit-sigpending","link":"#worker-rlimit-sigpending","children":[]}]},{"level":3,"title":"优化性能相关的配置","slug":"优化性能相关的配置","link":"#优化性能相关的配置","children":[{"level":4,"title":"worker_processes","slug":"worker-processes","link":"#worker-processes","children":[]},{"level":4,"title":"worker_cpu_affinity","slug":"worker-cpu-affinity","link":"#worker-cpu-affinity","children":[]},{"level":4,"title":"ssl_engine","slug":"ssl-engine","link":"#ssl-engine","children":[]},{"level":4,"title":"timer_resolution","slug":"timer-resolution","link":"#timer-resolution","children":[]},{"level":4,"title":"worker_priority","slug":"worker-priority","link":"#worker-priority","children":[]}]},{"level":3,"title":"事件类配置项","slug":"事件类配置项","link":"#事件类配置项","children":[{"level":4,"title":"worker_connections","slug":"worker-connections","link":"#worker-connections","children":[]},{"level":4,"title":"accept_mutex","slug":"accept-mutex","link":"#accept-mutex","children":[]},{"level":4,"title":"lock_file","slug":"lock-file","link":"#lock-file","children":[]},{"level":4,"title":"accept_mutex_delay","slug":"accept-mutex-delay","link":"#accept-mutex-delay","children":[]},{"level":4,"title":"multi_accept","slug":"multi-accept","link":"#multi-accept","children":[]},{"level":4,"title":"use","slug":"use","link":"#use","children":[]}]}],"git":{"createdTime":1687857948000,"updatedTime":1692003721000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":2}]},"readingTime":{"minutes":12.07,"words":3622},"filePathRelative":"Nginx/Core.md","localizedDate":"2023年6月20日","excerpt":"<p>内核模块用于控制 <strong>nginx服务器</strong> 的基本功能，内核参数的修改需要重新启动nginx才能生效？？？</p>\\n<h3> 用于调试进程，定位问题的配置项</h3>\\n<h4> daemon</h4>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">是否以 守护进程 方式启动nginx</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>语法： daemon on|off;\\n默认： daemon on;\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>守护进程（daemon）</strong> 是 <strong>脱离终端</strong> 并且在 <strong>后台运行</strong> 的进程。\\n它脱离终端是为了避免进程执行过程中的信息在任何终端上显示，这样一来，进程也不会被任何终端所产生的信息所打断。\\n<code>nginx毫无疑问是一个需要以守护进程方式运行的服务</code>，因此，<strong>默认</strong> 都是以这种方式运行的。\\n不过 nginx 还是提供了 <strong>关闭</strong> 守护进程的模式，之所以提供这种模式，是为了 <strong>方便跟踪调试nginx</strong>，毕竟用 <strong>gdb</strong><sup>Linux常用的程序调试器</sup> 调试进程时最烦琐的就是<code>如何继续跟进fork出的子进程</code>了。</p>\\n</div>","copyright":{"author":"JSH","license":"MIT"},"autoDesc":true}');export{e as data};
