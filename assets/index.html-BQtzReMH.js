import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as i,c as e,b as o}from"./app-D3_6Qfyn.js";const n={},a=o('<p>当浏览器的 <strong>网络线程</strong> 收到 <strong>HTML</strong> 文档后，会产生一个 <strong>渲染任务</strong>，并将其传递 <strong>渲染主线程</strong> 的消息队列。</p><p>在事件循环机制的作用下，渲染主线程取出消息队列中的渲染任务，开启渲染流程。</p><figure><img src="https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/渲染时间点.1hrzbay7up.webp" alt="" width="800" tabindex="0" loading="lazy"><figcaption>渲染时间点</figcaption></figure><h2 id="渲染流水线" tabindex="-1"><a class="header-anchor" href="#渲染流水线"><span>渲染流水线</span></a></h2><p>整个渲染流程分为多个阶段，分别是:</p><ul><li>HTML 解析</li><li>样式计算</li><li>布局</li><li>分层</li><li>绘制</li><li>分块</li><li>光栅化</li><li>画</li></ul><p>每个阶段都有明确的输入输出，<strong>上一个阶段的输出</strong> 会成为 <strong>下一个阶段的输入</strong>。</p><p>这样，整个渲染流程就形成了一套组织严密的生产流水线。</p><figure><img src="https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/渲染流水线.41xtnyj74g.webp" alt="" width="800" tabindex="0" loading="lazy"><figcaption>渲染流水线</figcaption></figure><h3 id="「解析-html」" tabindex="-1"><a class="header-anchor" href="#「解析-html」"><span>「<strong>解析 HTML</strong>」</span></a></h3><p>解析过程中遇到 CSS 解析 CSS，遇到 JS 执行 JS。</p><p>为了提高解析效率，浏览器在开始解析前，会启动一个 <strong>预解析</strong> 的线程，率先下载 HTML 中的 <strong>外部CSS</strong> 文件和 <strong>外部的 JS 文件</strong>。</p><p>如果主线程解析到 <strong>link</strong> 位置，此时外部的 CSS 文件还没有下载解析好，主线程不会等待，继续解析后续的HTML。</p><p>这是因为 <strong>下载</strong> 和 <strong>解析 CSS</strong> 的工作是在 <strong>预解析线程</strong> 中进行的。这就是CSS不会阻塞 HTML 解析的根本原因。</p><figure><img src="https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/Document-Object-Model.7zq74q3yr3.webp" alt="" tabindex="0" loading="lazy"><figcaption>Document-Object-Model</figcaption></figure><figure><img src="https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/CSS-Object-Model.2a4ut48dpd.webp" alt="" tabindex="0" loading="lazy"><figcaption>CSS-Object-Model</figcaption></figure><h2 id="知识延伸" tabindex="-1"><a class="header-anchor" href="#知识延伸"><span>知识延伸</span></a></h2><h3 id="为何-script、meta等元素都是不显示的" tabindex="-1"><a class="header-anchor" href="#为何-script、meta等元素都是不显示的"><span>为何 Script、meta等元素都是不显示的</span></a></h3><p>在浏览器的默认样式中，默认了样式 <code>display: none</code></p>',19),r=[a];function p(s,g){return i(),e("div",null,r)}const h=t(n,[["render",p],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/Interview/JavaScript/BrowserRenderingPrinciples/","title":"浏览器渲染原理","lang":"zh-CN","frontmatter":{"title":"浏览器渲染原理","lang":"zh-CN","date":"2024-03-27T16:04:31.000Z","permalink":"/Interview/JavaScript/BrowserRenderingPrinciples/","category":["JavaScript"],"tag":["JavaScript"],"description":"当浏览器的 网络线程 收到 HTML 文档后，会产生一个 渲染任务，并将其传递 渲染主线程 的消息队列。 在事件循环机制的作用下，渲染主线程取出消息队列中的渲染任务，开启渲染流程。 渲染时间点 渲染流水线 整个渲染流程分为多个阶段，分别是: HTML 解析 样式计算 布局 分层 绘制 分块 光栅化 画 每个阶段都有明确的输入输出，上一个阶段的输出 会成...","head":[["meta",{"property":"og:url","content":"https://shaohui-jin.github.io/Interview/JavaScript/BrowserRenderingPrinciples/"}],["meta",{"property":"og:title","content":"浏览器渲染原理"}],["meta",{"property":"og:description","content":"当浏览器的 网络线程 收到 HTML 文档后，会产生一个 渲染任务，并将其传递 渲染主线程 的消息队列。 在事件循环机制的作用下，渲染主线程取出消息队列中的渲染任务，开启渲染流程。 渲染时间点 渲染流水线 整个渲染流程分为多个阶段，分别是: HTML 解析 样式计算 布局 分层 绘制 分块 光栅化 画 每个阶段都有明确的输入输出，上一个阶段的输出 会成..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/渲染时间点.1hrzbay7up.webp \\"渲染时间点\\" =800x"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-27T10:25:44.000Z"}],["meta",{"property":"article:author","content":"石怜安"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2024-03-27T16:04:31.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-27T10:25:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"浏览器渲染原理\\",\\"image\\":[\\"https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/渲染时间点.1hrzbay7up.webp \\\\\\"渲染时间点\\\\\\" =800x\\",\\"https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/渲染流水线.41xtnyj74g.webp \\\\\\"渲染流水线\\\\\\" =800x\\",\\"https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/Document-Object-Model.7zq74q3yr3.webp \\\\\\"Document-Object-Model\\\\\\"\\",\\"https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/CSS-Object-Model.2a4ut48dpd.webp \\\\\\"CSS-Object-Model\\\\\\"\\"],\\"datePublished\\":\\"2024-03-27T16:04:31.000Z\\",\\"dateModified\\":\\"2024-03-27T10:25:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"石怜安\\",\\"url\\":\\"https://shaohui-jin.github.io\\"}]}"]]},"headers":[{"level":2,"title":"渲染流水线","slug":"渲染流水线","link":"#渲染流水线","children":[{"level":3,"title":"「解析 HTML」","slug":"「解析-html」","link":"#「解析-html」","children":[]}]},{"level":2,"title":"知识延伸","slug":"知识延伸","link":"#知识延伸","children":[{"level":3,"title":"为何 Script、meta等元素都是不显示的","slug":"为何-script、meta等元素都是不显示的","link":"#为何-script、meta等元素都是不显示的","children":[]}]}],"git":{"createdTime":1711535144000,"updatedTime":1711535144000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":1}]},"readingTime":{"minutes":1.45,"words":435},"filePathRelative":"zh/Interview/JavaScript/BrowserRenderingPrinciples.md","localizedDate":"2024年3月27日","excerpt":"<p>当浏览器的 <strong>网络线程</strong> 收到 <strong>HTML</strong> 文档后，会产生一个 <strong>渲染任务</strong>，并将其传递 <strong>渲染主线程</strong> 的消息队列。</p>\\n<p>在事件循环机制的作用下，渲染主线程取出消息队列中的渲染任务，开启渲染流程。</p>\\n<figure><img src=\\"https://shaohui-jin.github.io/picx-images-hosting/blog/EventLoop/渲染时间点.1hrzbay7up.webp\\" alt=\\"\\" width=\\"800\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>渲染时间点</figcaption></figure>","autoDesc":true}');export{h as comp,d as data};
