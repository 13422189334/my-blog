import{_ as n,Y as s,Z as a,$ as t}from"./framework-990fb3f1.js";const o={},e=[t('<h3 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">expandJsonTool</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> jmap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n  <span class="token keyword">var</span> <span class="token function-variable function">expandJson</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">jstr<span class="token punctuation">,</span> mapIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>jstr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> jstr<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">expandJson</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mapIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>jstr <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> jstr<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 如果mapIndex为false,null,&#39;&#39;时，则不加初始索引</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mapIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">var</span> key <span class="token operator">=</span> i<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mapIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">// Array 是 Object 的子集，先判断是否为 Array,如果是，则不走Object的判断</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token keyword">in</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">expandJson</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>j<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">expandJson</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;{&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">expandJson</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          jmap<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> jstr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">expandJson</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> jmap\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数使用" tabindex="-1"><a class="header-anchor" href="#函数使用" aria-hidden="true">#</a> 函数使用</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">expandJsonTool</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 如上</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> demo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">&quot;Type&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Notification&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;MessageId&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;f0477020-1bb4-598d&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;TopicArn&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;arn:aws:sns:us-east-2::made&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;Subject&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ALARM: \\&quot;made\\&quot; in US East (Ohio)&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;Message&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;{\\&quot;AlarmName\\&quot;:\\&quot;made\\&quot;,\\&quot;AlarmDescription\\&quot;:null,\\&quot;AWSAccountId\\&quot;:\\&quot;917958955567\\&quot;,\\&quot;AldatedTimestamp\\&quot;:\\&quot;20230000\\&quot;,\\&quot;NewStateValue\\&quot;:\\&quot;ALARM\\&quot;,\\&quot;NewStateReason\\&quot;:\\&quot;Threshold.\\&quot;,\\&quot;StateChangeTime\\&quot;:\\&quot;2020000\\&quot;,\\&quot;Region\\&quot;:\\&quot;US East (Ohio)\\&quot;,\\&quot;AlarmArn\\&quot;:\\&quot;arn:alarm:made\\&quot;,\\&quot;OldStateValue\\&quot;:\\&quot;INSUFFICIENT_DATA\\&quot;,\\&quot;OKActions\\&quot;:[],\\&quot;AlarmActions\\&quot;:[\\&quot;arnmade\\&quot;],\\&quot;InsufficientDataActions\\&quot;:[],\\&quot;Trigger\\&quot;:{\\&quot;MetricName\\&quot;:\\&quot;NetworkTransmitThroughput\\&quot;,\\&quot;Namespace\\&quot;:\\&quot;AWS/RDS\\&quot;,\\&quot;StatisticType\\&quot;:\\&quot;Statistic\\&quot;,\\&quot;Statistic\\&quot;:\\&quot;AVERAGE\\&quot;,\\&quot;Unit\\&quot;:null,\\&quot;Dimensions\\&quot;:[{\\&quot;value\\&quot;:\\&quot;mysql\\&quot;,\\&quot;name\\&quot;:\\&quot;EngineName\\&quot;}],\\&quot;Period\\&quot;:300,\\&quot;EvaluPeriods\\&quot;:1,\\&quot;DatapAlarm\\&quot;:1,\\&quot;Comparator\\&quot;:\\&quot;Greatehreshold\\&quot;,\\&quot;Thhold\\&quot;:1.0,\\&quot;TreaingData\\&quot;:\\&quot;missing\\&quot;,\\&quot;Evaluateile\\&quot;:\\&quot;\\&quot;}}&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;Timestamp&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;2023-03-06T07:39:44.238Z&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;SignatureVersion&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;Signature&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;P2gIvFv4i&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;SigningCertURL&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;h&quot;</span><span class="token punctuation">,</span>\n  <span class="token string-property property">&quot;UnsubscribeURL&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;http&quot;</span>\n<span class="token punctuation">}</span>\n<span class="token function">expandJsonTool</span><span class="token punctuation">(</span>demo<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="结果输出" tabindex="-1"><a class="header-anchor" href="#结果输出" aria-hidden="true">#</a> 结果输出</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{\n    &quot;Type&quot;: &quot;Notification&quot;,\n    &quot;MessageId&quot;: &quot;f0477020-1bb4-598d&quot;,\n    &quot;TopicArn&quot;: &quot;arn:aws:sns:us-east-2::made&quot;,\n    &quot;Subject&quot;: &quot;ALARM: \\&quot;made\\&quot; in US East (Ohio)&quot;,\n    &quot;Message.AlarmName&quot;: &quot;made&quot;,\n    &quot;Message.AlarmDescription&quot;: null,\n    &quot;Message.AWSAccountId&quot;: &quot;917958955567&quot;,\n    &quot;Message.AldatedTimestamp&quot;: &quot;20230000&quot;,\n    &quot;Message.NewStateValue&quot;: &quot;ALARM&quot;,\n    &quot;Message.NewStateReason&quot;: &quot;Threshold.&quot;,\n    &quot;Message.StateChangeTime&quot;: &quot;2020000&quot;,\n    &quot;Message.Region&quot;: &quot;US East (Ohio)&quot;,\n    &quot;Message.AlarmArn&quot;: &quot;arn:alarm:made&quot;,\n    &quot;Message.OldStateValue&quot;: &quot;INSUFFICIENT_DATA&quot;,\n    &quot;Message.Trigger.MetricName&quot;: &quot;NetworkTransmitThroughput&quot;,\n    &quot;Message.Trigger.Namespace&quot;: &quot;AWS/RDS&quot;,\n    &quot;Message.Trigger.StatisticType&quot;: &quot;Statistic&quot;,\n    &quot;Message.Trigger.Statistic&quot;: &quot;AVERAGE&quot;,\n    &quot;Message.Trigger.Unit&quot;: null,\n    &quot;Message.Trigger.Dimensions[0].value&quot;: &quot;mysql&quot;,\n    &quot;Message.Trigger.Dimensions[0].name&quot;: &quot;EngineName&quot;,\n    &quot;Message.Trigger.Period&quot;: 300,\n    &quot;Message.Trigger.EvaluPeriods&quot;: 1,\n    &quot;Message.Trigger.DatapAlarm&quot;: 1,\n    &quot;Message.Trigger.Comparator&quot;: &quot;Greatehreshold&quot;,\n    &quot;Message.Trigger.Thhold&quot;: 1,\n    &quot;Message.Trigger.TreaingData&quot;: &quot;missing&quot;,\n    &quot;Message.Trigger.Evaluateile&quot;: &quot;&quot;,\n    &quot;Timestamp&quot;: &quot;2023-03-06T07:39:44.238Z&quot;,\n    &quot;SignatureVersion&quot;: &quot;1&quot;,\n    &quot;Signature&quot;: &quot;P2gIvFv4i&quot;,\n    &quot;SigningCertURL&quot;: &quot;h&quot;,\n    &quot;UnsubscribeURL&quot;: &quot;http&quot;\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6)];const p=n(o,[["render",function(n,t){return s(),a("div",null,e)}],["__file","index.html.vue"]]);export{p as default};
