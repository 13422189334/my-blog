const n=JSON.parse('{"key":"v-2b746c60","path":"/FrontEnd/JavaScript/FlatJson/","title":"请使用JS完成一个JSON扁平化","lang":"zh-CN","frontmatter":{"title":"请使用JS完成一个JSON扁平化","date":"2023-02-25T14:57:37.000Z","permalink":"/FrontEnd/JavaScript/FlatJson/","category":["JavaScript"],"tag":["JavaScript"],"description":"代码实现 function expandJsonTool(data, k) { var jmap = {} var expandJson = function (jstr, mapIndex) { if (jstr instanceof Array) { for (var i in jstr) { expandJson(jstr[i], `${mapIndex}[${i}]`); } } else if (jstr instanceof Object) { for (var i in jstr) { // 如果mapIndex为false,null,\'\'时，则不加初始索引 if (!mapIndex) { var key = i; } else { var key = `${mapIndex}.${i}`; } // Array 是 Object 的子集，先判断是否为 Array,如果是，则不走Object的判断 if (jstr[i] instanceof Array) { for (var j in jstr[i]) { expandJson(jstr[i][j], `${key}[${j}]`); } } else if ((jstr[i] instanceof Object)) { expandJson(jstr[i], key); } else if (typeof jstr[i] === \'string\' &amp;&amp; jstr[i].includes(\'{\') &amp;&amp; jstr[i].includes(\'}\')) { expandJson(JSON.parse(jstr[i]), key); } else { jmap[key] = jstr[i] } } } } expandJson(data, k); return jmap }","head":[["meta",{"property":"og:url","content":"https://jin-shaohui.gitee.io/FrontEnd/JavaScript/FlatJson/"}],["meta",{"property":"og:site_name","content":"繁华中自律，落魄中自愈"}],["meta",{"property":"og:title","content":"请使用JS完成一个JSON扁平化"}],["meta",{"property":"og:description","content":"代码实现 function expandJsonTool(data, k) { var jmap = {} var expandJson = function (jstr, mapIndex) { if (jstr instanceof Array) { for (var i in jstr) { expandJson(jstr[i], `${mapIndex}[${i}]`); } } else if (jstr instanceof Object) { for (var i in jstr) { // 如果mapIndex为false,null,\'\'时，则不加初始索引 if (!mapIndex) { var key = i; } else { var key = `${mapIndex}.${i}`; } // Array 是 Object 的子集，先判断是否为 Array,如果是，则不走Object的判断 if (jstr[i] instanceof Array) { for (var j in jstr[i]) { expandJson(jstr[i][j], `${key}[${j}]`); } } else if ((jstr[i] instanceof Object)) { expandJson(jstr[i], key); } else if (typeof jstr[i] === \'string\' &amp;&amp; jstr[i].includes(\'{\') &amp;&amp; jstr[i].includes(\'}\')) { expandJson(JSON.parse(jstr[i]), key); } else { jmap[key] = jstr[i] } } } } expandJson(data, k); return jmap }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-14T09:02:01.000Z"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2023-02-25T14:57:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-14T09:02:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"请使用JS完成一个JSON扁平化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-25T14:57:37.000Z\\",\\"dateModified\\":\\"2023-08-14T09:02:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":3,"title":"函数使用","slug":"函数使用","link":"#函数使用","children":[]},{"level":3,"title":"结果输出","slug":"结果输出","link":"#结果输出","children":[]}],"git":{"createdTime":1682567520000,"updatedTime":1692003721000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":2}]},"readingTime":{"minutes":1.44,"words":432},"filePathRelative":"Knowledge/FrontEnd/JavaScript/FlatJson.md","localizedDate":"2023年2月25日","excerpt":"<h3> 代码实现</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">expandJsonTool</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data<span class=\\"token punctuation\\">,</span> k</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">var</span> jmap <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">expandJson</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">jstr<span class=\\"token punctuation\\">,</span> mapIndex</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>jstr <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> i <span class=\\"token keyword\\">in</span> jstr<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>mapIndex<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">[</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>i<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">]</span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>jstr <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> i <span class=\\"token keyword\\">in</span> jstr<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 如果mapIndex为false,null,\'\'时，则不加初始索引</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>mapIndex<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">var</span> key <span class=\\"token operator\\">=</span> i<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">var</span> key <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>mapIndex<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">.</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>i<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token comment\\">// Array 是 Object 的子集，先判断是否为 Array,如果是，则不走Object的判断</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> j <span class=\\"token keyword\\">in</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>key<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">[</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>j<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">]</span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n          <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Object</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\'string\'</span> <span class=\\"token operator\\">&amp;&amp;</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'{\'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'}\'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parse</span><span class=\\"token punctuation\\">(</span>jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n          jmap<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> jstr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token function\\">expandJson</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> jmap\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"JSH","license":"MIT"},"autoDesc":true}');export{n as data};
