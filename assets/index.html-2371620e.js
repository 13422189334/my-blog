const e=JSON.parse('{"key":"v-a6145dea","path":"/DesignPattern/Info/","title":"简而言之","lang":"zh-CN","frontmatter":{"title":"简而言之","lang":"zh-CN","date":"2022-05-16T11:21:30.000Z","permalink":"/DesignPattern/Info/","category":["设计模式"],"tag":["设计模式"],"description":"设计模式是什么？ 设计模式（Design pattern）代表了最佳的实践，通常被有经验的面向对象的软件开发人员所采用。 设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。 大白话就是，在合适的场景使用合适的设计模式： 代码比较稳定 代码比较高效 代码维护性强 代码比较规范 工厂模式","head":[["meta",{"property":"og:url","content":"https://jin-shaohui.gitee.io/DesignPattern/Info/"}],["meta",{"property":"og:site_name","content":"繁华中自律，落魄中自愈"}],["meta",{"property":"og:title","content":"简而言之"}],["meta",{"property":"og:description","content":"设计模式是什么？ 设计模式（Design pattern）代表了最佳的实践，通常被有经验的面向对象的软件开发人员所采用。 设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。 大白话就是，在合适的场景使用合适的设计模式： 代码比较稳定 代码比较高效 代码维护性强 代码比较规范 工厂模式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-14T09:02:01.000Z"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2022-05-16T11:21:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-14T09:02:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简而言之\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-16T11:21:30.000Z\\",\\"dateModified\\":\\"2023-08-14T09:02:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"设计模式是什么？","slug":"设计模式是什么","link":"#设计模式是什么","children":[]},{"level":3,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[]},{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]},{"level":3,"title":"策略模式","slug":"策略模式","link":"#策略模式","children":[]},{"level":3,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]},{"level":3,"title":"装饰器模式","slug":"装饰器模式","link":"#装饰器模式","children":[]},{"level":3,"title":"代理模式","slug":"代理模式","link":"#代理模式","children":[]},{"level":3,"title":"发布订阅模式","slug":"发布订阅模式","link":"#发布订阅模式","children":[]}],"git":{"createdTime":1682567520000,"updatedTime":1692003721000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":2}]},"readingTime":{"minutes":5.49,"words":1648},"filePathRelative":"DesignPattern/Info.md","localizedDate":"2022年5月16日","excerpt":"<h3> 设计模式是什么？</h3>\\n<p>设计模式（Design pattern）代表了<code>最佳的实践</code>，通常被有经验的面向对象的软件开发人员所采用。</p>\\n<p>设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。</p>\\n<p>大白话就是，在<code>合适的场景</code>使用<code>合适的设计模式</code>：</p>\\n<ul>\\n<li>代码比较稳定</li>\\n<li>代码比较高效</li>\\n<li>代码维护性强</li>\\n<li>代码比较规范</li>\\n</ul>\\n<h3> 工厂模式</h3>","copyright":{"author":"JSH","license":"MIT"},"autoDesc":true}');export{e as data};
