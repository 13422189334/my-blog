const e=JSON.parse('{"key":"v-61f5a4d5","path":"/FrontEnd/Standard/ES6/","title":"ECMAScript 6","lang":"zh-CN","frontmatter":{"title":"ECMAScript 6","lang":"zh-CN","date":"2022-06-01T11:21:30.000Z","permalink":"/FrontEnd/Standard/ES6/","icon":"es6","category":["ECMAScript"],"tag":["前端规范"],"description":"ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。 Node.js 是 JavaScript 的服务器运行环境（runtime）。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node.js 默认没有打开的 ES6 实验性语法。 // Linux &amp; Mac $ node --v8-options | grep harmony // Windows $ node --v8-options | findstr harmony","head":[["meta",{"property":"og:url","content":"https://jin-shaohui.gitee.io/FrontEnd/Standard/ES6/"}],["meta",{"property":"og:site_name","content":"繁华中自律，落魄中自愈"}],["meta",{"property":"og:title","content":"ECMAScript 6"}],["meta",{"property":"og:description","content":"ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。 Node.js 是 JavaScript 的服务器运行环境（runtime）。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node.js 默认没有打开的 ES6 实验性语法。 // Linux &amp; Mac $ node --v8-options | grep harmony // Windows $ node --v8-options | findstr harmony"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-14T09:02:01.000Z"}],["meta",{"property":"article:tag","content":"前端规范"}],["meta",{"property":"article:published_time","content":"2022-06-01T11:21:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-14T09:02:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ECMAScript 6\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-01T11:21:30.000Z\\",\\"dateModified\\":\\"2023-08-14T09:02:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Babel 转码器","slug":"babel-转码器","link":"#babel-转码器","children":[{"level":3,"title":"安装 @Babel/core","slug":"安装-babel-core","link":"#安装-babel-core","children":[]},{"level":3,"title":"安装 @Babel/cli","slug":"安装-babel-cli","link":"#安装-babel-cli","children":[]},{"level":3,"title":"安装 @Babel/node","slug":"安装-babel-node","link":"#安装-babel-node","children":[]},{"level":3,"title":"安装 @babel/register","slug":"安装-babel-register","link":"#安装-babel-register","children":[]},{"level":3,"title":"polyfill","slug":"polyfill","link":"#polyfill","children":[]},{"level":3,"title":"浏览器环境","slug":"浏览器环境","link":"#浏览器环境","children":[]}]},{"level":2,"title":"最常用的ES6特性","slug":"最常用的es6特性","link":"#最常用的es6特性","children":[]},{"level":2,"title":"let, const","slug":"let-const","link":"#let-const","children":[{"level":4,"title":"概念概述","slug":"概念概述","link":"#概念概述","children":[]}]},{"level":2,"title":"class, extends, super","slug":"class-extends-super","link":"#class-extends-super","children":[]},{"level":2,"title":"arrow function","slug":"arrow-function","link":"#arrow-function","children":[]},{"level":2,"title":"template string","slug":"template-string","link":"#template-string","children":[]},{"level":2,"title":"destructuring","slug":"destructuring","link":"#destructuring","children":[]},{"level":2,"title":"default","slug":"default","link":"#default","children":[]},{"level":2,"title":"rest arguments","slug":"rest-arguments","link":"#rest-arguments","children":[]},{"level":2,"title":"import export","slug":"import-export","link":"#import-export","children":[]}],"git":{"createdTime":1682567520000,"updatedTime":1692003721000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":3}]},"readingTime":{"minutes":24.22,"words":7265},"filePathRelative":"Knowledge/FrontEnd/Standard/ES6.md","localizedDate":"2022年6月1日","excerpt":"<p>ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准。因为当前版本的ES6是在2015年发布的，所以又称ECMAScript 2015。</p>\\n<p>Node.js 是 JavaScript 的服务器运行环境（runtime）。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node.js 默认没有打开的 ES6 实验性语法。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>// Linux <span class=\\"token operator\\">&amp;</span> Mac\\n$ <span class=\\"token function\\">node</span> --v8-options <span class=\\"token operator\\">|</span> <span class=\\"token function\\">grep</span> harmony\\n// Windows\\n$ <span class=\\"token function\\">node</span> --v8-options <span class=\\"token operator\\">|</span> findstr harmony\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"JSH","license":"MIT"},"autoDesc":true}');export{e as data};
