import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as e,a as n,f as a}from"./app-DGyjAF8E.js";const o={},p=n("blockquote",null,[n("p",null,[n("code",null,"MessageChannel"),a(": Channel Messaging API 的 MessageChannel 接口允许创建一个新的消息通道，并通过它的两个 "),n("code",null,"MessagePort"),a(" 属性发送数据。")])],-1),c=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{js:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"deepClone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"obj"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"Promise"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"resolve"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"const"),a(),n("span",{class:"token punctuation"},"{"),a(" port1"),n("span",{class:"token punctuation"},","),a(" port2 "),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"new"),a(),n("span",{class:"token class-name"},"MessageChannel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
    port1`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"postMessage"),n("span",{class:"token punctuation"},"("),a("obj"),n("span",{class:"token punctuation"},")"),a(`
    port2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function-variable function"},"onmessage"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token parameter"},"msg"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
      `),n("span",{class:"token function"},"resolve"),n("span",{class:"token punctuation"},"("),a("msg"),n("span",{class:"token punctuation"},"."),a("data"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token keyword"},"let"),a(" a "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"{"),a(),n("span",{class:"token literal-property property"},"a"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token literal-property property"},"b"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"2"),a(),n("span",{class:"token punctuation"},"}"),a(`
a`),n("span",{class:"token punctuation"},"."),a("c "),n("span",{class:"token operator"},"="),a(` a
`),n("span",{class:"token keyword"},"const"),a(" b "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token keyword"},"await"),a(),n("span",{class:"token function"},"deepClone"),n("span",{class:"token punctuation"},"("),a("a"),n("span",{class:"token punctuation"},")"),a(`
console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("a"),n("span",{class:"token punctuation"},","),a(" b"),n("span",{class:"token punctuation"},","),a(" a "),n("span",{class:"token operator"},"==="),a(" b"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// <ref *1> { a: 1, b: 2, c: [Circular *1] } <ref *1> { a: 1, b: 2, c: [Circular *1] } false"),a(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),l=[p,c];function i(r,u){return t(),e("div",null,l)}const m=s(o,[["render",i],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/Tips/JavaScript/Data/001/","title":"深克隆","lang":"zh-CN","frontmatter":{"title":"深克隆","lang":"zh-CN","date":"2024-05-18T17:15:31.000Z","permalink":"/Tips/JavaScript/Data/001/","category":["JavaScript"],"tag":["Tips"],"description":"MessageChannel: Channel Messaging API 的 MessageChannel 接口允许创建一个新的消息通道，并通过它的两个 MessagePort 属性发送数据。","head":[["meta",{"property":"og:url","content":"https://shaohui-jin.github.io/Tips/JavaScript/Data/001/"}],["meta",{"property":"og:title","content":"深克隆"}],["meta",{"property":"og:description","content":"MessageChannel: Channel Messaging API 的 MessageChannel 接口允许创建一个新的消息通道，并通过它的两个 MessagePort 属性发送数据。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-29T07:52:09.000Z"}],["meta",{"property":"article:author","content":"石怜安"}],["meta",{"property":"article:tag","content":"Tips"}],["meta",{"property":"article:published_time","content":"2024-05-18T17:15:31.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-29T07:52:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深克隆\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-18T17:15:31.000Z\\",\\"dateModified\\":\\"2024-05-29T07:52:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"石怜安\\",\\"url\\":\\"https://shaohui-jin.github.io\\"}]}"]]},"headers":[],"git":{"createdTime":1716969129000,"updatedTime":1716969129000,"contributors":[{"name":"shaohui_jin","email":"1051131737@qq.com","commits":1}]},"readingTime":{"minutes":0.38,"words":113},"filePathRelative":"zh/小技巧/JavaScript/数据操作相关/001.深克隆.md","localizedDate":"2024年5月18日","excerpt":"<blockquote>\\n<p><code>MessageChannel</code>: Channel Messaging API 的 MessageChannel 接口允许创建一个新的消息通道，并通过它的两个 <code>MessagePort</code> 属性发送数据。</p>\\n</blockquote>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre js=\\"\\" class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">deepClone</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">obj</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Promise</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">resolve</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> port1<span class=\\"token punctuation\\">,</span> port2 <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">MessageChannel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    port1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">postMessage</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span>\\n    port2<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onmessage</span> <span class=\\"token operator\\">=</span> <span class=\\"token parameter\\">msg</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">resolve</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">.</span>data<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">let</span> a <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">a</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">2</span> <span class=\\"token punctuation\\">}</span>\\na<span class=\\"token punctuation\\">.</span>c <span class=\\"token operator\\">=</span> a\\n<span class=\\"token keyword\\">const</span> b <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">deepClone</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">,</span> a <span class=\\"token operator\\">===</span> b<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// &lt;ref *1&gt; { a: 1, b: 2, c: [Circular *1] } &lt;ref *1&gt; { a: 1, b: 2, c: [Circular *1] } false</span>\\n</code></pre></div>","autoDesc":true}');export{m as comp,g as data};
